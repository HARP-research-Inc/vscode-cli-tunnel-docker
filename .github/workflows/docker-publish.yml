name: Docker

on:
  push:
    branches: ["main"]
    tags: ["*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64/v8
        target:
          - "base"
          - "base-dev"
          - "full-dev"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert image name to lowercase
        run: |
          GITHUB_REPOSITORY="${{ github.repository }}"
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> "${GITHUB_ENV}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      - name: "Log into registry ${{ env.REGISTRY }}"
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.0.0
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          flavor: |
            latest=false
            suffix=-${{ matrix.target}}

      - name: Get actual version
        id: version-actual
        env:
          REF: "${{ github.ref }}"
          REF_NAME: "${{ github.ref_name }}"
        run: |
          if [[ $REF == refs/tags/* ]]; then
            # We have a tag, might be a pure version or have a dash
            if [[ $REF_NAME == *-* ]]; then
              # We have a hyphenated tag, the first half should be the right version
              IFS='-' read -ra VERSION_PARTS <<< "$REF_NAME"
              echo "CODE_CLI_VERSION=${VERSION_PARTS[0]}" >> "${GITHUB_ENV}"
            else
              echo "CODE_CLI_VERSION=${REF_NAME}" >> "${GITHUB_ENV}"
            fi
          else
            echo "CODE_CLI_VERSION=latest" >> "${GITHUB_ENV}"
          fi

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5 # v5.0.0
        with:
          context: .
          labels: "${{ steps.meta.outputs.labels }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: "${{ matrix.target }}"
          platforms: "${{ matrix.platform }}"
          provenance: true
          sbom: true
          outputs: "type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true"
          build-args: "VERSION=${{ env.CODE_CLI_VERSION }}"

      - name: Export digest
        run: |
          mkdir -p "/tmp/digests/${{ matrix.target }}"
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.target }}/${digest#sha256:}"

      - name: "Get arch name (compatible with docker manifest)"
        id: get_arch_name
        run: |
          SAFENAME="$(echo "${{ matrix.platform }}" | sed 's/\//_/g')"
          echo "ARCH_NAME=${SAFENAME}" >> "${GITHUB_OUTPUT}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: "digests-${{ matrix.target }}-plat-${{ steps.get_arch_name.outputs.ARCH_NAME }}"
          path: "/tmp/digests/${{ matrix.target }}/*"
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        target:
          - "base"
          - "base-dev"
          - "full-dev"
    steps:
      - name: Convert image name to lowercase
        run: |
          GITHUB_REPOSITORY="${{ github.repository }}"
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> "${GITHUB_ENV}"

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: "digests-${{ matrix.target }}-plat-*"
          path: "/tmp/digests/"

      - name: Move to one directory
        run: |
          mkdir -p /tmp/digests-all
          mv /tmp/digests/*/* /tmp/digests-all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Manually generate tags
        run: .github/generate-data.sh
        env:
          REF: "${{ github.ref }}"
          REF_NAME: "${{ github.ref_name }}"
          TARGET: "${{ matrix.target }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: "${{ env.DOCKER_TAGS_AUTO_GEN }}"

      - name: "Log into registry ${{ env.REGISTRY }}"
        uses: docker/login-action@v3
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create manifest list and push
        working-directory: "/tmp/digests-all"
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
